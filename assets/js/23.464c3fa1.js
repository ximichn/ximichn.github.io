(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{506:function(t,e,a){"use strict";a.r(e);var n=a(2),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"数据模型："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模型："}},[t._v("#")]),t._v(" 数据模型：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("树状结构  \n只能用绝对路径查询 zookeeper 节点  \n")])])]),a("h2",{attrs:{id:"znode-节点类型与特性："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#znode-节点类型与特性："}},[t._v("#")]),t._v(" znode 节点类型与特性：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("持久节点  \n临时节点：当创建该临时节点的客户端会话因超时或发生异常而关闭时，该节点也相应在 zookeeper 服务器上被删除。  \n有序节点  \n")])])]),a("h2",{attrs:{id:"每个节点都维护这些内容："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每个节点都维护这些内容："}},[t._v("#")]),t._v(" 每个节点都维护这些内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("一个二进制数组，用来存储节点数据  \nACL 访问控制信息  \n子节点数据（因为临时节点不允许有子节点，所以其子节点字段为 null）  \n记录自身状态信息的 stat：   \n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("状态属性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("czxid")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示该数据节点被创建时的事务 ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("mzxid")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示该节点最后一次被更新时的事务 ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("pzxid")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示该节点的子节点列表最后一次被修改时的事务 ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ctime")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示该节点的创建时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("mtime")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示该节点最后一次被更新的时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("version")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数据节点的版本号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cversion")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("子节点的版本号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("aversion")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("节点的 ACL 版本号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ephemeralOwner")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("创建该临时节点的会话 SessionID，如果该节点是持久节点，那么这个属性值是 0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("dataLength")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数据内容的长度")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("numChildren")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("当前节点的子节点个数")])])])]),t._v(" "),a("h2",{attrs:{id:"使用-zookeeper-实现锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-zookeeper-实现锁"}},[t._v("#")]),t._v(" 使用 zookeeper 实现锁")]),t._v(" "),a("p",[t._v("悲观锁："),a("br"),t._v("\n问题：线程 A 因为异常中断导致节点始终存在，其他线程因为无法再次创建节点而无法获取锁，这就产生了死锁问题。"),a("br"),t._v("\n解决：创建临时节点，并通过服务器端添加监听事件来通知其他线程重新获取锁。"),a("br"),t._v("\n乐观锁："),a("br"),t._v("\n不会全程的锁定资源，而是在数据进行提交更新的时候，对数据的冲突与否进行检测，如果发现冲突了，则拒绝操作。"),a("br"),t._v("\n步骤：读取 - 校验 - 写入。"),a("br"),t._v("\nzookeeper 中的 version 属性就是用来实现“校验”的。"),a("br"),t._v("\nsetDataRequest -》 checkAndIncVersion -》\ngetRecordForPath -》nodeRecord -》currentversion")]),t._v(" "),a("h2",{attrs:{id:"watch-机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch-机制"}},[t._v("#")]),t._v(" watch 机制")])])}),[],!1,null,null,null);e.default=r.exports}}]);