(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{494:function(s,a,t){"use strict";t.r(a);var n=t(2),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"springioc："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springioc："}},[s._v("#")]),s._v(" SpringIOC：")]),s._v(" "),t("h3",{attrs:{id:"反射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[s._v("#")]),s._v(" 反射")]),s._v(" "),t("h2",{attrs:{id:"aop："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aop："}},[s._v("#")]),s._v(" AOP：")]),s._v(" "),t("p",[s._v("动态代理：jdk动态代理、cglib动态代理")]),s._v(" "),t("p",[s._v("类实现某个接口，使用 jdk动态代理，生成一个实现同样接口的一个代理类，构造一个实例对象出来。")]),s._v(" "),t("p",[s._v("类没有实现接口，会改用 cglib动态代理，生成类的一个子类，它可以动态生成字节码，覆盖一下方法，在方法里加入增强的代码")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"spring中的bean是线程安全的吗？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring中的bean是线程安全的吗？"}},[s._v("#")]),s._v(" spring中的bean是线程安全的吗？")]),s._v(" "),t("p",[s._v("​\t不是。bean里有实例变量不安全。没有实例变量的话，bean一般是来访问数据库的")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyServiceImpl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//实例变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        data"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("scope：")]),s._v(" "),t("ol",[t("li",[s._v("singleton：默认，某个容器中只有一个 bean 实例")]),s._v(" "),t("li",[s._v("prototype：为每个 bean 请求提供一个实例")]),s._v(" "),t("li",[s._v("request：为每个网络请求创建一个实例，在请求完成后，bean 会失效并被垃圾回收器回收")]),s._v(" "),t("li",[s._v("session：于 request 范围类似，确保每个 session 中有一个 bean 的实例，在 session 过期后，bean 会随之失效")]),s._v(" "),t("li",[s._v("global-session")])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"spring事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring事务"}},[s._v("#")]),s._v(" spring事务")]),s._v(" "),t("p",[s._v("实现原理：@Transactional，AOP思想，方法执行前，开启事务，执行完毕后，根据方法是否报错，来决定回滚还是提交事务")]),s._v(" "),t("h2",{attrs:{id:"传播机制："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传播机制："}},[s._v("#")]),s._v(" 传播机制：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Transactional")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("propagation"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Propagation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("REQUIRED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodA")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodB")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//do something")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Transactional")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("propagation"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Propagation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("REQUIRED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodB")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//do something")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"事务级别："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务级别："}},[s._v("#")]),s._v(" 事务级别：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("\t1. Propagation_REQUIRED：当前没有事务，就创建一个新的事务，如果当前存在事务，就加入该事务\n\t2. Propagation_SUPPORTS：支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行\n\t3. Propagation_MANDATORY：支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常\n\t4. Propagation_REQUIRES_NEW：无论当前存不存在事务，都创建新事务\n\t5. Propagation_NOT_SUPPORTED：以非事务方式执行，如果当前存在事务，就把当前事务挂起\n\t6. Propagation_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常\n\t7. Propagation_NESTED：如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则按 REQUIRED 属性执行\n     \t\t1. 开启一个事务\n     \t\t2. 执行方法 A 里的一些代码，doSomeThingPre()\n     \t\t3. 设置一个回滚点 savepoint\n     \t\t4. 执行方法 B 里的一些代码\n     \t\t5. 如果方法 B 里抛出了异常，此时进行回滚，回滚到之前设置的回滚点 savepoint\n     \t\t6. 执行方法 A 里的一些代码，doSomeThingPost()\n     \t\t7. 提交或回滚事务（A 抛异常全部回滚，B 抛异常只回滚 B）\n")])])]),t("hr"),s._v(" "),t("h2",{attrs:{id:"spring-boot启动流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot启动流程"}},[s._v("#")]),s._v(" spring boot启动流程")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"spring-核心架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-核心架构"}},[s._v("#")]),s._v(" spring 核心架构")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"spring中使用了哪些设计模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring中使用了哪些设计模式"}},[s._v("#")]),s._v(" spring中使用了哪些设计模式")]),s._v(" "),t("hr")])}),[],!1,null,null,null);a.default=r.exports}}]);